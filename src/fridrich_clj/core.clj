(ns fridrich-clj.core
  (:gen-class))

(defn -main
  "I don't do a whole lot ... yet."
  [& args]
  (println "Hello, World!"))


(def pll-edges {
                ;; Each vector describe one of cube's edge.
                ;; first - left edge, second -  up edge,
                ;; third - right edge, last - down edge.
                [[1 0 1] [0 0 0] [0 1 1] [1 1 0]] "Aa"
                [[1 0 1] [0 1 1] [1 1 0] [0 0 0]] "Ab"
                [[1 1 1] [0 0 0] [0 0 0] [0 0 0]] "F"
                [[1 0 1] [0 0 0] [0 0 0] [1 1 0]] "Ga"
                [[1 0 1] [0 0 0] [1 1 0] [0 0 0]] "Gb"
                [[1 0 1] [0 1 1] [0 0 0] [0 0 0]] "Gc"
                [[1 0 1] [0 0 0] [0 1 1] [0 0 0]] "Gd"
                [[1 1 1] [0 1 1] [0 1 1] [0 1 1]] "Ja"
                [[1 1 1] [1 1 0] [1 1 0] [1 1 0]] "Jb"
                [[1 0 1] [0 0 0] [0 0 0] [0 1 1]] "Ra"
                [[1 0 1] [1 1 0] [0 0 0] [0 1 1]] ["Rb" "T"]
                [[0 0 0] [0 0 0] [0 0 0] [0 0 0]] "E"
                [[1 1 0] [1 1 0] [1 1 0] [1 1 0]] "Na"
                [[0 1 1] [0 1 1] [0 1 1] [0 1 1]] "Nb"
                [[1 1 0] [0 0 0] [0 0 0] [0 1 1]] "V"
                [[0 0 0] [0 0 0] [1 1 0] [0 1 1]] "Y"
                [[1 0 1] [1 0 1] [1 0 1] [1 0 1]] ["H" "Z"]
                [[1 0 1] [1 1 1] [1 0 1] [1 0 1]] ["Ua" "Ub"]
                })

(pll-edges [[1 0 1] [0 1 1] [1 1 0] [0 0 0]])
